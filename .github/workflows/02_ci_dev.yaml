
name: Release DEV

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the develop branch
on:
  push:
    branches: 
      - develop
    tags:
      - 'v*.*.*'

env:
  FLUTTER_VERSION: "2.8.1"
  JAVA_VERSION: "12.x"
  PRIVATE_FILES_DIR: "private_files"
  ENVIRONMENT: "staging"
  FLAVOUR: "staging"
  APP_VERSION: "1.0.0"
  BUILD_NUMBER: "${{ github.run_number }}"
  APP_TARGET: "lib/main.dart"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Job configuration for the Flutter State Challenge App
  build_and_release:
    name: Build iOS App
    
    # The type of runner that the job will run on
    runs-on: macos-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Clone repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}

      - name: Clone private repository
        uses: actions/checkout@v2
        with:
          repository: middelkampdev/verbeelding-verbindt-private
          path: ${{ env.PRIVATE_FILES_DIR }}
          ref: master
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # TODO: Decrypt private files

      - name: Copy private files
        run: cp -R "${{ env.PRIVATE_FILES_DIR }}/${{ env.ENVIRONMENT }}/" .

      - name: Delete cloned private repository
        run: rm -rf "${{ env.PRIVATE_FILES_DIR }}"
      
      - name: Install Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}
      
      - name: Cache Flutter dependencies
        uses: actions/cache@v1
        with:
          path: /Users/runner/hostedtoolcache/flutter
          key: ${{ runner.OS }}-flutter-install-cache-${{ env.FLUTTER_VERSION }}

      - name: Install Flutter
        uses: subosito/flutter-action@v1
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Download dependencies
        run: ./flutter_pub_get.sh

      - name: Dump file hierarchy
        run: ls -R

      - name: Generate files
        run: ./flutter_generate_code.sh

      - name: Dump file hierarchy
        run: ls -R

      - name: Run Android build
        run: flutter build appbundle --release --target=${{ env.APP_TARGET }} --build-name=${{ env.APP_VERSION }} --build-number=${{ env.BUILD_NUMBER }} --flavor=${{ env.FLAVOUR }}

      # TODO Sign Android APK

      # Build iOS version of the Flutter State Management App
      - name: Run iOS build
        run: flutter build ios --release --no-codesign --target=${{ env.APP_TARGET }} --build-name=${{ env.APP_VERSION }} --build-number=${{ env.BUILD_NUMBER }} --flavor=${{ env.FLAVOUR }}

      # TODO Archive iOS IPA

      # TODO: Delete copied private files

      - name: Dump file hierarchy
        run: ls -R
